// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NedoAvito.APIGateWay.Database;

namespace NedoAvito.APIGateWay.Migrations
{
    [DbContext(typeof(RepositoryDbContext))]
    partial class RepositoryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NedoAvito.APIGateWay.Models.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CardCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardObjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardObjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ChangeDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ChangeMakerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CardCategoryId");

                    b.HasIndex("ChangeMakerId");

                    b.HasIndex("CreatorId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("NedoAvito.APIGateWay.Models.CardCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CardSuperCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ChangeDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ChangeMakerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CardSuperCategoryId");

                    b.HasIndex("ChangeMakerId");

                    b.HasIndex("CreatorId");

                    b.ToTable("CardCategories");
                });

            modelBuilder.Entity("NedoAvito.APIGateWay.Models.CardSuperCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ChangeDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ChangeMakerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChangeMakerId");

                    b.HasIndex("CreatorId");

                    b.ToTable("CardSuperCategories");
                });

            modelBuilder.Entity("NedoAvito.APIGateWay.Models.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ChangeDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ChangeMakerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsUse")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ChangeMakerId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("RoleId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("NedoAvito.APIGateWay.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ChangeDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ChangeMakerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChangeMakerId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatorId1")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ChangeMakerId1");

                    b.HasIndex("CreatorId1");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("NedoAvito.APIGateWay.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ChangeDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SurName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NedoAvito.APIGateWay.Models.Card", b =>
                {
                    b.HasOne("NedoAvito.APIGateWay.Models.CardCategory", "CardCategory")
                        .WithMany()
                        .HasForeignKey("CardCategoryId");

                    b.HasOne("NedoAvito.APIGateWay.Models.User", "ChangeMaker")
                        .WithMany()
                        .HasForeignKey("ChangeMakerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NedoAvito.APIGateWay.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CardCategory");

                    b.Navigation("ChangeMaker");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("NedoAvito.APIGateWay.Models.CardCategory", b =>
                {
                    b.HasOne("NedoAvito.APIGateWay.Models.CardSuperCategory", "CardSuperCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("CardSuperCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NedoAvito.APIGateWay.Models.User", "ChangeMaker")
                        .WithMany()
                        .HasForeignKey("ChangeMakerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NedoAvito.APIGateWay.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CardSuperCategory");

                    b.Navigation("ChangeMaker");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("NedoAvito.APIGateWay.Models.CardSuperCategory", b =>
                {
                    b.HasOne("NedoAvito.APIGateWay.Models.User", "ChangeMaker")
                        .WithMany()
                        .HasForeignKey("ChangeMakerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NedoAvito.APIGateWay.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChangeMaker");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("NedoAvito.APIGateWay.Models.Permission", b =>
                {
                    b.HasOne("NedoAvito.APIGateWay.Models.User", "ChangeMaker")
                        .WithMany()
                        .HasForeignKey("ChangeMakerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NedoAvito.APIGateWay.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NedoAvito.APIGateWay.Models.Role", null)
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId");

                    b.Navigation("ChangeMaker");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("NedoAvito.APIGateWay.Models.Role", b =>
                {
                    b.HasOne("NedoAvito.APIGateWay.Models.User", "ChangeMaker")
                        .WithMany()
                        .HasForeignKey("ChangeMakerId1");

                    b.HasOne("NedoAvito.APIGateWay.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId1");

                    b.Navigation("ChangeMaker");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("NedoAvito.APIGateWay.Models.User", b =>
                {
                    b.HasOne("NedoAvito.APIGateWay.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("NedoAvito.APIGateWay.Models.CardSuperCategory", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("NedoAvito.APIGateWay.Models.Role", b =>
                {
                    b.Navigation("Permissions");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
